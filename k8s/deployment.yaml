apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: dev
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      initContainers:
      - name: wait-for-mysql
        image: busybox:1.28
        command: ['sh', '-c', 'until nc -z mysql-db 3306; do echo "Waiting for MySQL..."; sleep 2; done; echo "MySQL is ready";']
      containers:
      - name: backend
        image: inesmrad/soprahr-cicd-backend:${IMAGE_TAG}
        imagePullPolicy: Always
        ports:
        - containerPort: 9009
        resources:
          limits:
            memory: "768Mi"
            cpu: "500m"
          requests:
            memory: "256Mi"
            cpu: "100m"
        env:
        # Database Configuration
        - name: SPRING_DATASOURCE_URL
          value: "jdbc:mysql://mysql-db:3306/soprahrdb?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC&autoReconnect=true"
        - name: SPRING_DATASOURCE_USERNAME
          value: "root"
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: DB_PASSWORD
        - name: SPRING_DATASOURCE_DRIVER_CLASS_NAME
          value: "com.mysql.cj.jdbc.Driver"
        # Debug logging
        - name: LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_JDBC_CORE
          value: "DEBUG"
        - name: LOGGING_LEVEL_COM_ZAXXER_HIKARI
          value: "DEBUG"
        - name: LOGGING_LEVEL_ORG_HIBERNATE
          value: "DEBUG"
        - name: SPRING_JPA_SHOW_SQL
          value: "true"
        - name: SPRING_DATASOURCE_HIKARI_CONNECTION_TIMEOUT
          value: "60000"
        - name: SPRING_DATASOURCE_HIKARI_MAXIMUM_POOL_SIZE
          value: "5"
        - name: SPRING_DATASOURCE_HIKARI_MINIMUM_IDLE
          value: "1"
        - name: SPRING_DATASOURCE_HIKARI_MAX_LIFETIME
          value: "1800000"
        - name: SPRING_JPA_HIBERNATE_DDL_AUTO
          value: "update"
        - name: SPRING_JPA_OPEN_IN_VIEW
          value: "false"
        - name: SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT
          value: "org.hibernate.dialect.MySQLDialect"
          
        # Disable OTP and Mail Services
        - name: APP_FEATURE_OTP_ENABLED
          value: "false"
        - name: SPRING_MAIL_ENABLED
          value: "false"
        - name: MANAGEMENT_HEALTH_MAIL_ENABLED
          value: "false"
          
        # Performance Optimization
        - name: SPRING_MAIN_LAZY_INITIALIZATION
          value: "true"
        - name: SPRING_MAIN_WEB_APPLICATION_TYPE
          value: "servlet"
        - name: SPRING_AUTOCONFIGURE_EXCLUDE
          value: "org.springframework.boot.autoconfigure.mail.MailSenderAutoConfiguration,org.springframework.boot.actuate.autoconfigure.mail.MailHealthContributorAutoConfiguration"
        - name: SPRING_JPA_PROPERTIES_HIBERNATE_JDBC_FETCH_SIZE
          value: "50"
        - name: SPRING_JPA_PROPERTIES_HIBERNATE_JDBC_BATCH_SIZE
          value: "50"
        - name: SPRING_JPA_PROPERTIES_HIBERNATE_ORDER_UPDATES
          value: "true"
        - name: SPRING_JPA_PROPERTIES_HIBERNATE_ORDER_INSERTS
          value: "true"
          
        command: ["java",
          "-XX:+UseContainerSupport",
          "-XX:MaxRAMPercentage=75.0",
          "-Xms384m",
          "-Xmx512m",
          "-XX:+UseG1GC",
          "-XX:MaxGCPauseMillis=300",
          "-XX:+UseStringDeduplication",
          "-XX:InitiatingHeapOccupancyPercent=35",
          "-XX:ParallelGCThreads=2",
          "-XX:ConcGCThreads=2",
          "-XX:+HeapDumpOnOutOfMemoryError",
          "-XX:HeapDumpPath=/tmp/heapdump.hprof",
          "-XX:+ExitOnOutOfMemoryError",
          "-Xlog:gc*:file=/tmp/gc.log:time,uptime:filecount=2,filesize=10m",
          "-Djava.security.egd=file:/dev/./urandom",
          "-Dspring.main.lazy-initialization=true",
          "-Dspring.autoconfigure.exclude=org.springframework.boot.autoconfigure.mail.MailSenderAutoConfiguration,org.springframework.boot.actuate.autoconfigure.mail.MailHealthContributorAutoConfiguration",
          "-Dspring.mail.enabled=false",
          "-Dmanagement.health.mail.enabled=false",
          "-Dspring.jpa.properties.hibernate.jdbc.time_zone=UTC",
          "-Dspring.jpa.properties.hibernate.generate_statistics=false",
          "-Dlogging.level.org.hibernate.SQL=WARN",
          "-Dlogging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN",
          "-jar",
          "app.jar"]
        envFrom:
        - configMapRef:
            name: app-config
        - secretRef:
            name: app-secrets
        startupProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 9009
            scheme: HTTP
          failureThreshold: 60  # 10 minutes (60 * 10s)
          periodSeconds: 10
          timeoutSeconds: 5
          initialDelaySeconds: 30
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 9009
            scheme: HTTP
          initialDelaySeconds: 120  # 2 minutes
          periodSeconds: 15
          timeoutSeconds: 5
          failureThreshold: 10
          successThreshold: 1
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 9009
            scheme: HTTP
          initialDelaySeconds: 300  # 5 minutes
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 5
          successThreshold: 1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: dev
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: inesmrad/soprahr-cicd-frontend:${IMAGE_TAG}
        imagePullPolicy: Always
        ports:
        - containerPort: 80
        resources:
          limits:
            memory: "256Mi"
            cpu: "300m"
          requests:
            memory: "128Mi"
            cpu: "100m"
        startupProbe:
          httpGet:
            path: /
            port: 80
          failureThreshold: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 5
          failureThreshold: 3